// ------------  Paquete e importaciones ------------
package analizadores;

import java_cup.runtime.*;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public double resultado;
    public String printConsole; 
    public String numeroString;
    
    public static double operaciones(String name, double a, double b) {
    String printConsole = ""; 
    double resultado = 0.0; 
    String numeroString = "";

    switch (name) {
        case "+":
            resultado = a + b;
            numeroString = Double.toString(resultado);
            System.out.println(numeroString);
            break;
        case "-":
            resultado = a - b;
            numeroString = Double.toString(resultado);
            System.out.println(numeroString);
            break;
        case "*":
            resultado = a * b;
            numeroString = Double.toString(resultado);
            System.out.println(numeroString);
            break;
        case "/":
            
            if (b != 0) {
                resultado = a / b;
                numeroString = Double.toString(resultado);
                System.out.println(numeroString);
            } else {
                System.out.println("Error: Divisi贸n por cero no permitida.");
            }
            break;
        case "%":
            resultado = a; 
            numeroString = Double.toString(resultado);
            System.out.println(numeroString);
            break;
        default:
            System.out.println("Error: Operaci贸n no reconocida.");
    }

    printConsole += "Operacion: " + name + " Resultado: " + Double.toString(resultado);

    return resultado;
    }

    
    public void clean(){

        //esta funcion permite limpiar la consola

         printConsole = ""; 
    
    }
    
 

    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}


//------> Declaraci贸n de terminales
terminal String NUMERO,CADENA,COMA,ARROBA,COR_IZQ,COR_DER,ASSIGN,DOSPUNTOS,PUNTOYCOMA;
terminal String ID_VARIABLE,CONSOLE,PRINT,IGUAL;
terminal String sum,res,mul,mod,div;
terminal String VAR,DOUBLE,CHAR,ARR,END,PROGRAM,ENDPROGRAM;



//------> Declaraci贸n de no terminales
non terminal INICIO;
non terminal SENTENCIA;
non terminal VARIABLES;
non terminal TIPO;
non terminal EXPRESION;
non terminal Operacion_numerica;
non terminal IMPRIMIR_EXP;




//PROCEDENCIAS
precedence left sum,res;
precedence left mul,div;
precedence left mod;


//------> Definir Simbolo Inicial
start with INICIO; 


// ------------>  Producciones  <------------

//inicio
INICIO ::= PROGRAM IMPRIMIR_EXP ENDPROGRAM;


// imprimir una expresion
IMPRIMIR_EXP ::=  CONSOLE DOSPUNTOS DOSPUNTOS PRINT IGUAL EXPRESION COMA END PUNTOYCOMA;

//La sentencia
SENTENCIA ::= VAR DOSPUNTOS TIPO DOSPUNTOS DOSPUNTOS ID_VARIABLE ASSIGN EXPRESION END PUNTOYCOMA;

        TIPO ::= CHAR | DOUBLE;
        EXPRESION::= NUMERO | CADENA;


//INICIO ::= {:clean();:} Operacion_numerica:Pa {:RESULT =Pa; :};



// Operaciones numericas
/*
Operacion_numerica::= Operacion_numerica:a sum Operacion_numerica:b {:RESULT = operaciones("+",a,b); :}
    | Operacion_numerica:a res Operacion_numerica:b {:RESULT = operaciones("-",a,b); :}
    | Operacion_numerica:a mul Operacion_numerica:b {:RESULT = operaciones("*",a,b); :}
    | Operacion_numerica:a div Operacion_numerica:b {:RESULT = operaciones("/",a,b); :}
    | NUMERO:a {: RESULT = Double.parseDouble(a); :};
*/